name: export-and-branch-solution
# Export solution from DEV environment
#  unpack it and prepare, commit and push a git branch with the changes
#  
#  using spn-auth with Client ID and Tenant ID for environemnet login 
#  
#  using secrets for
#   SP_CLIENTID           Service Principal App ID
#   SP_TENANTID           Service Principal Azure AD tenant
#   SP_SECRET             Service Principal secrtes
#
#   DevEnvironmentUrl     Url referencing the development environment


on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: RegisterServiceEndpointsSolution
      solution_package_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: deployment/solutions/

jobs:
  export-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@0.4.0
      with:
        environment-url: ${{secrets.DevEnvironmentUrl}}
        app-id: ${{secrets.SP_CLIENTID}}
        client-secret: ${{ secrets.SP_SECRET }}
        tenant-id: ${{secrets.SP_TENANTID}}

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@0.4.0
      with:
        solution-folder: ${{ github.event.inputs.solution_source_folder}}/${{ github.event.inputs.solution_name }}
        solution-file: ${{ github.event.inputs.solution_package_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-type: Managed

    - name: Import solution as Managed to build env
      uses: microsoft/powerplatform-actions/import-solution@0.4.0
      with:
        environment-url: ${{secrets.DevEnvironmentUrl}}
        app-id: ${{secrets.ClientID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{secrets.TentantID}}
        solution-file: ${{ github.event.inputs.solution_package_folder}}/${{ github.event.inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    # - name: export-solution action
    #   uses: microsoft/powerplatform-actions/export-solution@0.4.0
    #   with:
    #     environment-url: ${{secrets.DevEnvironmentUrl}}
    #     app-id: ${{secrets.SP_CLIENTID}}
    #     client-secret: ${{ secrets.SP_SECRET }}
    #     tenant-id: ${{secrets.SP_TENANTID}}
    #     solution-name: ${{ github.event.inputs.solution_name }}
    #     solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    # - name: unpack-solution action
    #   uses: microsoft/powerplatform-actions/unpack-solution@0.4.0
    #   with:
    #     solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
    #     solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
    #     solution-type: 'Unmanaged'
    #     overwrite-files: true

    # - name: branch-solution, prepare it for a PullRequest
    #   uses: microsoft/powerplatform-actions/branch-solution@v0
    #   with:
    #     solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
    #     solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
    #     repo-token: ${{ secrets.GITHUB_TOKEN }}
    #     allow-empty-commit: true
